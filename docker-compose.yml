services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: UTC
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 768M
        reservations:
          memory: 512M
    restart: unless-stopped

  s3:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      # docker exec -it minio /bin/sh
      # mc alias list
      # mc alias set local http://localhost:9000
      # > Enter Access Key: ${MINIO_ROOT_USER}
      # > Enter Secret Key: ${MINIO_ROOT_PASSWORD}
      # mc anonymous set public local/${SPRING_S3_BUCKET}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - s3-data:/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 256M
    command: server /data --console-address ":9001"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
      - SPRING_JPA_SHOW_SQL=${SPRING_JPA_SHOW_SQL}
      - SPRING_CORS_ALLOWED_ORIGINS=${SPRING_CORS_ALLOWED_ORIGINS}
      - SPRING_JWT_SECRET=${SPRING_JWT_SECRET}
      - SPRING_JWT_ACCESS_EXPIRATION=${SPRING_JWT_ACCESS_EXPIRATION}
      - SPRING_JWT_REFRESH_EXPIRATION=${SPRING_JWT_REFRESH_EXPIRATION}
      - SPRING_S3_ENDPOINT=${SPRING_S3_ENDPOINT}
      - SPRING_S3_BUCKET=${SPRING_S3_BUCKET}
      - SPRING_S3_ACCESS_KEY=${SPRING_S3_ACCESS_KEY}
      - SPRING_S3_SECRET_KEY=${SPRING_S3_SECRET_KEY}
    deploy:
      resources:
        limits:
          cpus: '1.2'
          memory: 1.5G
        reservations:
          memory: 1G
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 768M
        reservations:
          memory: 512M
    restart: unless-stopped

volumes:
  db-data:
  s3-data:
